---
import Layout from "../../layouts/Base.astro";
//import { app } from "../../firebase/server";
//import { getFirestore } from "firebase-admin/firestore";
import { getFriendById } from "../../firebase/firestore";
import { IoPencil, IoTrash, IoArrowBack } from "react-icons/io5";

interface Friend {
  name: string;
  age: number;
  isBestFriend: boolean;
}

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/404");
}

//const db = getFirestore(app);
//const friendsRef = db.collection("friends");
//const friendSnapshot = await friendsRef.doc(id).get();
const friendSnapshot = await getFriendById(id);

if (!friendSnapshot.exists) {
  return Astro.redirect("/404");
}

const friend = friendSnapshot.data() as Friend;
---

<Layout title={`Edit ${friend.name}`}>
  <section class="section-sm">
    <div class="container">
      <div class="flex items-center mb-6">
        <a
          href="/dashboardFriends"
          class="flex items-center text-blue-500 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors duration-300"
        >
          <IoArrowBack />
          Voltar a lista de amigos
        </a>
      </div>
      <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        Editar {friend.name}
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300 mb-6">
        Aqui você pode editar ou excluir um amigo.
      </p>
      <form
        method="post"
        action={`/api/friends/${id}`}
        class="bg-white dark:bg-gray-800 shadow-md rounded-lg p-6"
      >
        <div class="mb-4">
          <label
            for="name"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300"
            >Nome</label
          >
          <input
            type="text"
            id="name"
            name="name"
            value={friend.name}
            class="mt-1 block w-full bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 sm:text-sm"
          />
        </div>
        <div class="mb-4">
          <label
            for="age"
            class="block text-sm font-medium text-gray-700 dark:text-gray-300"
            >Idade</label
          >
          <input
            type="number"
            id="age"
            name="age"
            value={friend.age}
            class="mt-1 block w-full bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 border border-gray-300 dark:border-gray-600 rounded-lg shadow-sm focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-blue-500 dark:focus:border-blue-400 sm:text-sm"
          />
        </div>
        <div class="mb-4 flex items-center">
          <input
            type="checkbox"
            id="isBestFriend"
            name="isBestFriend"
            checked={friend.isBestFriend}
            class="h-4 w-4 text-blue-600 dark:text-blue-400 border-gray-300 dark:border-gray-600 rounded"
          />
          <label
            for="isBestFriend"
            class="ml-2 text-sm text-gray-700 dark:text-gray-300"
            >É melhor amigo?</label
          >
        </div>
        <button
          type="submit"
          class="bg-blue-500 dark:bg-blue-600 text-white dark:text-gray-900 px-4 py-2 rounded-lg hover:bg-blue-600 dark:hover:bg-blue-500 transition-colors duration-300"
        >
          <IoPencil />
          Editar amigo
        </button>
      </form>
      <button
        type="button"
        id="delete-document"
        class="mt-4 bg-red-500 dark:bg-red-600 text-white dark:text-gray-900 px-4 py-2 rounded-lg hover:bg-red-600 dark:hover:bg-red-500 transition-colors duration-300 flex items-center"
      >
        <IoTrash />
        Excluir
      </button>
    </div>
  </section>
</Layout>
<script>
  const deleteButton = document.getElementById(
    "delete-document"
  ) as HTMLButtonElement;
  const url = document.querySelector("form")?.getAttribute("action") as string;
  deleteButton.addEventListener("click", async () => {
    const response = await fetch(url, {
      method: "DELETE",
    });
    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>
